// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Asignatura {
  id                      Int                       @id @default(autoincrement())
  nombre                  String
  descripcion             String?
  PlanContemplaAsignatura PlanContemplaAsignatura[]
}

// Esto viene a ser remplazado por area verdad?
enum CARACTER {
  NORMAL
  ELECTIVO
  PRACTICA
  TITULACION
}

//

enum AREA {
  FP
  FG
  FE
  FB
}

model Estudiante {
  rut            String
  nombreCompleto String
  Cursacion      Cursacion[]
  PracticaTomada PracticaTomada[]

  @@id([rut])
}

model Cursacion {
  estudianteRut String
  estudiante    Estudiante @relation(fields: [estudianteRut], references: [rut])

  nota       Int
  numIntento Int
  grupo      String
  agnio      Int

  idAsignatura            Int
  idPlan                  Int
  planContemplaAsignatura PlanContemplaAsignatura @relation(fields: [idAsignatura, idPlan], references: [idAsignatura, idPlan])

  @@id([estudianteRut, idAsignatura, idPlan])
}

model Practica {
  nombre                 String
  posicion               Int
  competenciasRequeridas String[]

  idAsignatura            Int
  idPlan                  Int
  planContemplaAsignatura PlanContemplaAsignatura @relation(fields: [idAsignatura, idPlan], references: [idAsignatura, idPlan])

  id             Int              @id @default(autoincrement())
  PracticaTomada PracticaTomada[]
}

model PracticaTomada {
  fechaInicio          DateTime
  fechaTermino         DateTime
  resultadoDiagnostico String[]
  resultado            String

  rutEstudiante String
  estudiante    Estudiante @relation(fields: [rutEstudiante], references: [rut])
  idPractica    Int
  practica      Practica   @relation(fields: [idPractica], references: [id])

  @@id([rutEstudiante, idPractica])
}

model PlanContemplaAsignatura {
  semestre Int

  posicion Int
  caracter CARACTER

  idPlan        Int
  plan          Plan       @relation(fields: [idPlan], references: [id])
  idAsignatura  Int
  areaFormacion AREA
  asignatura    Asignatura @relation(fields: [idAsignatura], references: [id])

  esRequeridaEn Tributacion[] @relation(name: "es la requerida")
  esTributadaEn Tributacion[] @relation(name: "es la tributada")
  Practica      Practica[]
  Cursacion     Cursacion[]

  @@id([idPlan, idAsignatura])
}

model Tributacion {
  idPlan                Int
  idAsignaturaRequerida Int
  idAsignaturaTributada Int

  asignaturaRequerida PlanContemplaAsignatura @relation(name: "es la requerida", fields: [idPlan, idAsignaturaRequerida], references: [idPlan, idAsignatura])
  asignaturaTributada PlanContemplaAsignatura @relation(name: "es la tributada", fields: [idPlan, idAsignaturaTributada], references: [idPlan, idAsignatura])

  @@id([idPlan, idAsignaturaTributada, idAsignaturaRequerida])
}

model Plan {
  id                Int      @id @default(autoincrement())
  titulo            String   @unique
  anio              Int
  fechaInstauracion DateTime @default(now()) @db.Date

  PlanContemplaAsignatura PlanContemplaAsignatura[]
}
