// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Asignatura {
  id           Int     @id @default(autoincrement())
  codigo       String  @unique
  nombre       String
  descripcion  String?
  unidad       String?
  linkSyllabus String?

  PlanContemplaAsignatura PlanContemplaAsignatura[]
}

enum CARACTER {
  NORMAL
  ELECTIVO
  PRACTICA
  TITULACION
}

enum AREA {
  FP
  FG
  FE
  FB
}

model Estudiante {
  id             Int    @id @default(autoincrement())
  rut            String @unique
  nombreCompleto String

  Cursacion      Cursacion[]      @relation(name: "curso las asignaturas")
  PracticaTomada PracticaTomada[] @relation(name: "tomo las practicas")
}

model Cursacion {
  id         Int    @default(autoincrement())
  notaFinal  Float
  numIntento Int    @default(1)
  grupo      String @default("A")
  agnio      Int

  // referencia a
  idPlan                Int
  idAsignatura          Int
  asignaturaContemplada PlanContemplaAsignatura @relation(name: "asignatura contemplada", fields: [idAsignatura, idPlan], references: [idAsignatura, idPlan])

  estudianteRut String
  estudiante    Estudiante @relation(name: "curso las asignaturas", fields: [estudianteRut], references: [rut])

  @@id([id, estudianteRut, idAsignatura, idPlan])
}

model Practica {
  id                     Int      @default(autoincrement())
  nombre                 String
  posicionRelativa       Int
  competenciasRequeridas String[] // puede ser un tipo o un json

  idPlan                Int
  planRelacionado       Plan                    @relation(name: "define las practicas", fields: [idPlan], references: [id])
  idAsignatura          Int
  asignaturaContemplada PlanContemplaAsignatura @relation(name: "practica referenciada", fields: [idPlan, idAsignatura], references: [idPlan, idAsignatura])

  PracticaTomada PracticaTomada[] @relation(name: "practica asociada")

  @@id([id, idPlan, idAsignatura])
  @@unique([idPlan, idAsignatura])
}

model PracticaTomada {
  fechaInicio          DateTime
  fechaTermino         DateTime
  resultadoDiagnostico String[] // despues se puede hacer un tipo con los valores necesarios, o un json
  resultado            String

  rutEstudiante      String
  EstudianteAsociado Estudiante @relation(name: "tomo las practicas", fields: [rutEstudiante], references: [rut])

  idPractica       Int
  idPlan           Int
  idAsignatura     Int
  PracticaAsociada Practica @relation(name: "practica asociada", fields: [idPractica, idPlan, idAsignatura], references: [id, idPlan, idAsignatura])

  idConvenio       Int
  ConvenioAsociado Convenio @relation(name: "convenio asociado", fields: [idConvenio], references: [id])

  @@id([idPractica, idPlan, idAsignatura, rutEstudiante, idConvenio])
}

enum TIPO_PRACTICA {
  COLEGIO_REGULAR_PIE
  NO_CONVENCIONAL // preguntar por especificaciones
  ESCUELA_ESPECIAL
  COLEGIO_ESPECIAL // preguntar por la diferencia
  ESCUELA_DE_LENGUAJE
}

model Convenio {
  id             Int              @id @default(autoincrement())
  entidad        String           @unique
  tipoPractica   TIPO_PRACTICA
  esVigente      Boolean
  anioInicio     DateTime         @db.Date
  anioFin        DateTime         @db.Date
  PracticaTomada PracticaTomada[] @relation(name: "convenio asociado")
}

model PlanContemplaAsignatura {
  semestre      Int
  posicion      Int
  caracter      CARACTER
  areaFormacion AREA

  // referencia a
  idPlan       Int
  plan         Plan       @relation(fields: [idPlan], references: [id])
  idAsignatura Int
  asignatura   Asignatura @relation(fields: [idAsignatura], references: [id])

  // es referenciada en
  esRequeridaEn        Tributacion[] @relation(name: "es la requerida")
  esTributadaEn        Tributacion[] @relation(name: "es la tributada")
  practicaReferenciada Practica?     @relation(name: "practica referenciada")
  cursacionTomada      Cursacion[]   @relation(name: "asignatura contemplada")

  @@id([idPlan, idAsignatura])
}

model Tributacion {
  idPlan                Int
  idAsignaturaRequerida Int
  idAsignaturaTributada Int

  asignaturaRequerida PlanContemplaAsignatura @relation(name: "es la requerida", fields: [idPlan, idAsignaturaRequerida], references: [idPlan, idAsignatura])
  asignaturaTributada PlanContemplaAsignatura @relation(name: "es la tributada", fields: [idPlan, idAsignaturaTributada], references: [idPlan, idAsignatura])

  @@id([idPlan, idAsignaturaTributada, idAsignaturaRequerida])
}

model Plan {
  id                Int      @id @default(autoincrement())
  titulo            String   @unique
  anio              Int
  fechaInstauracion DateTime @default(now()) @db.Date

  PlanContemplaAsignatura PlanContemplaAsignatura[]
  PracticasDefinidas      Practica[]                @relation(name: "define las practicas")
}
